plugins {
    id 'idea'
    id 'java-library'
    id 'net.neoforged.gradle.userdev' version '7.0.120'
}

group = 'tld.unknown'
version = project.mod_version

java {
    archivesBaseName = project.mod_id
    toolchain.languageVersion = JavaLanguageVersion.of(21)
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "net.neoforged:neoforge:${project.forge_version}"

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

minecraft {
    accessTransformers.file file('src/main/resources/META-INF/accesstransformer.cfg')
}


runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client { systemProperty 'forge.enabledGameTestNamespaces', project.mod_id }
    server { systemProperty 'forge.enabledGameTestNamespaces', project.mod_id; programArgument '--nogui' }
    gameTestServer { systemProperty 'forge.enabledGameTestNamespaces', project.mod_id }
    data { programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/datagen/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath() }
}

sourceSets.main.resources { srcDir 'src/datagen/resources' }

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version         : forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors         : mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties + [project: project]
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                //"Specification-Vendor": "mystery authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.mod_id,
                "Implementation-Version"  : project.jar.archiveVersion,
                //"Implementation-Vendor": "mystery authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
